{"version":3,"sources":["./src/app/components/edit-course/edit-course.component.ts","./src/app/components/edit-course/edit-course.component.html","./src/environments/environment.ts","./src/app/services/auth-guard.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/error-page/error-page.component.ts","./src/app/components/error-page/error-page.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/components/my-courses/my-courses.component.ts","./src/app/components/my-courses/my-courses.component.html","./src/app/components/add-post/add-post.component.ts","./src/app/components/add-post/add-post.component.html","./src/app/components/course/course.component.ts","./src/app/components/course/course.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { AuthService } from './../../services/auth.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-course',\n  templateUrl: './edit-course.component.html',\n  styleUrls: ['./edit-course.component.css'],\n})\nexport class EditCourseComponent implements OnInit {\n  public Editor = ClassicEditor;\n  course = {\n    courseId: '',\n    title: '',\n    body: '',\n  };\n\n  errors = {\n    title: {\n      text: 'Title is Required',\n      is: false,\n    },\n    body: {\n      text: 'Body Is Required',\n      is: false,\n    },\n  };\n  constructor(\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.authService.getPost(params.courseid).subscribe((data: any) => {\n        this.course.title = data.title;\n        this.course.body = data.body;\n        this.course.courseId = data._id;\n      });\n    });\n  }\n  hideNotification(): void {\n    this.errors.body.is = false;\n    this.errors.title.is = false;\n  }\n\n  checkForErrors(): boolean {\n    this.errors.title.is = false;\n    this.errors.body.is = false;\n\n    if (!this.course.title.length) {\n      this.errors.title.is = true;\n    }\n    if (!this.course.body.length) {\n      this.errors.body.is = true;\n    }\n    if (this.errors.title.is || this.errors.body.is) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  onPostSubmit(): void {\n    console.log(this.course);\n    const isValid = this.checkForErrors();\n    if (isValid) {\n      this.authService.editPost(this.course).subscribe(\n        (data: any) => {\n          this.router.navigate([`/courses/${data._id}`]);\n        },\n        (err) => {\n          this.router.navigate(['/error']);\n        }\n      );\n    }\n  }\n}\n","<section class=\"hero\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <div class=\"column is-10 is-offset-1\">\n        <h1 class=\"title is-size-3 has-text-centered has-text-black\">\n          Edit Course\n        </h1>\n        <div\n          *ngIf=\"this.errors.body.is || this.errors.title.is\"\n          class=\"notification is-danger\"\n        >\n          <button (click)=\"hideNotification()\" class=\"delete\"></button>\n          <p>{{ this.errors.title.text }}</p>\n          <p>{{ this.errors.body.text }}</p>\n        </div>\n        <div class=\"box\">\n          <form (submit)=\"onPostSubmit()\">\n            <div class=\"field\">\n              <label class=\"label\">Title : </label>\n              <div class=\"control has-icons-left has-icons-right\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  autofocus=\"\"\n                  required\n                  [(ngModel)]=\"course.title\"\n                  name=\"title\"\n                  #title=\"ngModel\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Body : </label>\n              <ckeditor\n                [(ngModel)]=\"course.body\"\n                [editor]=\"Editor\"\n                name=\"body\"\n                #body=\"ngModel\"\n              ></ckeditor>\n            </div>\n            <button type=\"submit\" class=\"button is-block is-info is-fullwidth\">\n              Save\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router, CanActivate } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardService {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.authService.isLogged()) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { Router } from '@angular/router';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  user: any = {\n    username: '',\n    password: '',\n  };\n\n  registered: any = {\n    closed: true,\n    success: false,\n    msg: '',\n  };\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    if (this.authService.isLogged()) {\n      this.router.navigate(['/']);\n    }\n  }\n  hideNotification(): void {\n    this.registered.closed = true;\n  }\n  onLoginSubmit(): void {\n    this.authService.authenticateUser(this.user).subscribe((data: any) => {\n      this.registered.closed = false;\n      this.registered.success = data.success;\n      data.success\n        ? (this.registered.msg = 'Logged in')\n        : (this.registered.msg = data.msg);\n      if (data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        setTimeout(() => {\n          this.router.navigate(['my-courses']);\n        }, 1000);\n      }\n    });\n  }\n}\n","<section class=\"hero\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <div class=\"column is-6 is-offset-3\">\n        <h1 class=\"title is-size-3 has-text-centered has-text-black\">Login</h1>\n        <hr class=\"login-hr\" />\n        <p class=\"subtitle has-text-black has-text-centered\">\n          Please login to proceed.\n        </p>\n        <div\n          *ngIf=\"!this.registered.closed\"\n          [ngClass]=\"{\n            'is-primary': this.registered.success,\n            'is-danger': !this.registered.success\n          }\"\n          class=\"notification\"\n        >\n          <button (click)=\"hideNotification()\" class=\"delete\"></button>\n          {{ this.registered.msg }}\n        </div>\n        <div class=\"box\">\n          <form (submit)=\"onLoginSubmit()\">\n            <div class=\"field\">\n              <label class=\"label\">Username : </label>\n              <div class=\"control has-icons-left has-icons-right\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  autofocus=\"\"\n                  [(ngModel)]=\"user.username\"\n                  required\n                  name=\"username\"\n                  #username=\"ngModel\"\n                  [ngClass]=\"{\n                    'is-success':\n                      username.valid && (username.dirty || username.touched),\n                    'is-danger':\n                      username.invalid && (username.dirty || username.touched)\n                  }\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Password : </label>\n              <div class=\"control has-icons-left has-icons-right\">\n                <input\n                  class=\"input\"\n                  type=\"password\"\n                  autofocus=\"\"\n                  [(ngModel)]=\"user.password\"\n                  required\n                  name=\"password\"\n                  #password=\"ngModel\"\n                  [ngClass]=\"{\n                    'is-success':\n                      password.valid && (password.dirty || password.touched),\n                    'is-danger':\n                      password.invalid && (password.dirty || password.touched)\n                  }\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n              </div>\n            </div>\n            <button class=\"button is-block is-info is-fullwidth\">Login</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\ninterface User {\n  fullname: string;\n  username: string;\n  password: string;\n  confirmPassword: string;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  user: User = {\n    fullname: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n  };\n  registered: any = {\n    closed: true,\n    success: false,\n    msg: '',\n  };\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n  hideNotification(): void {\n    this.registered.closed = true;\n  }\n  onRegisterSubmit(): void {\n    this.authService.registerUser(this.user).subscribe((data: any) => {\n      this.registered.closed = false;\n      this.registered.success = data.success;\n      this.registered.msg = data.msg;\n      if (data.success) {\n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 1000);\n      }\n    });\n  }\n}\n","<section class=\"hero\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <div class=\"column is-6 is-offset-3\">\n        <h1 class=\"title is-size-3 has-text-centered has-text-black\">\n          Register\n        </h1>\n        <hr class=\"login-hr\" />\n        <p class=\"subtitle has-text-black has-text-centered\">\n          Please register to proceed.\n        </p>\n        <div\n          *ngIf=\"!this.registered.closed\"\n          [ngClass]=\"{\n            'is-primary': this.registered.success,\n            'is-danger': !this.registered.success\n          }\"\n          class=\"notification\"\n        >\n          <button (click)=\"hideNotification()\" class=\"delete\"></button>\n          {{ this.registered.msg }}\n        </div>\n        <div class=\"box\">\n          <form (submit)=\"onRegisterSubmit()\">\n            <div class=\"field\">\n              <label class=\"label\">Full Name : </label>\n              <div class=\"control has-icons-left has-icons-right\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  autofocus=\"\"\n                  [(ngModel)]=\"user.fullname\"\n                  pattern=\"^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$\"\n                  required\n                  name=\"fullname\"\n                  #fullname=\"ngModel\"\n                  [ngClass]=\"{\n                    'is-success':\n                      fullname.valid && (fullname.dirty || fullname.touched),\n                    'is-danger':\n                      fullname.invalid && (fullname.dirty || fullname.touched)\n                  }\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Username : </label>\n              <div class=\"control has-icons-left has-icons-right\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  autofocus=\"\"\n                  [(ngModel)]=\"user.username\"\n                  pattern=\"^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$\"\n                  required\n                  minlength=\"6\"\n                  name=\"username\"\n                  #username=\"ngModel\"\n                  [ngClass]=\"{\n                    'is-success':\n                      username.valid && (fullname.dirty || fullname.touched),\n                    'is-danger':\n                      username.invalid && (fullname.dirty || fullname.touched)\n                  }\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Password : </label>\n              <div class=\"control has-icons-left has-icons-right\">\n                <input\n                  class=\"input\"\n                  type=\"password\"\n                  autofocus=\"\"\n                  [(ngModel)]=\"user.password\"\n                  required\n                  minlength=\"8\"\n                  name=\"password\"\n                  #password=\"ngModel\"\n                  [ngClass]=\"{\n                    'is-success':\n                      password.valid && (password.dirty || password.touched),\n                    'is-danger':\n                      password.invalid && (password.dirty || password.touched)\n                  }\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Password Confirmation : </label>\n              <div class=\"control has-icons-left has-icons-right\">\n                <input\n                  class=\"input\"\n                  type=\"password\"\n                  autofocus=\"\"\n                  [(ngModel)]=\"user.confirmPassword\"\n                  required\n                  minlength=\"8\"\n                  name=\"confirmPassword\"\n                  #confirmPassword=\"ngModel\"\n                  [ngClass]=\"{\n                    'is-success':\n                      confirmPassword.valid &&\n                      (confirmPassword.dirty || confirmPassword.touched),\n                    'is-danger':\n                      confirmPassword.invalid &&\n                      (confirmPassword.dirty || confirmPassword.touched)\n                  }\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n              </div>\n              <p\n                *ngIf=\"\n                  confirmPassword.invalid &&\n                  confirmPassword.value != password.value &&\n                  (password.dirty || password.touched)\n                \"\n                class=\"help is-danger\"\n              >\n                Passwords does not match\n              </p>\n            </div>\n            <button\n              [disabled]=\"\n                fullname.invalid ||\n                username.invalid ||\n                password.invalid ||\n                confirmPassword.value != password.value\n              \"\n              class=\"button is-block is-info is-fullwidth\"\n            >\n              Register\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { AuthService } from './services/auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddPostComponent } from './components/add-post/add-post.component';\nimport { CourseComponent } from './components/course/course.component';\nimport { EditCourseComponent } from './components/edit-course/edit-course.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { MyCoursesComponent } from './components/my-courses/my-courses.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    AddPostComponent,\n    CourseComponent,\n    EditCourseComponent,\n    ErrorPageComponent,\n    MyCoursesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CKEditorModule,\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"hero is-fullheight is-danger\">\n  <div class=\"hero-body\">\n    <div class=\"container has-text-centered\">\n      <div class=\"columns is-12 is-variable\">\n        <div class=\"column is-two-thirds has-text-left\">\n          <h1 class=\"title is-1\">Error Page</h1>\n          <p class=\"is-size-4\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nulla\n            eligendi soluta voluptate facere molestiae consequatur.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Router } from '@angular/router';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  toggle = false;\n  ngOnInit(): void {}\n\n  ToggleMenu(): void {\n    this.toggle = !this.toggle;\n  }\n\n  isLogged(): boolean {\n    return this.authService.isLogged();\n  }\n  getUser(): any {\n    return this.authService.getUser();\n  }\n\n  onLogoutClick(): void {\n    // this.authService.addPost().subscribe(\n    //   (res) => {\n    //     console.log(res);\n    //   },\n    //   (err) => {\n    //     console.log(err);\n    //   }\n    // );\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar is-info\" role=\"navigation\" aria-label=\"main navigation\">\n  <div class=\"navbar-brand\">\n    <a class=\"navbar-item\" [routerLink]=\"['/']\">\n      <img\n        src=\"https://bulma.io/images/bulma-logo-white.png\"\n        width=\"112\"\n        height=\"28\"\n      />\n    </a>\n\n    <a\n      role=\"button\"\n      (click)=\"ToggleMenu()\"\n      class=\"navbar-burger burger\"\n      aria-label=\"menu\"\n      aria-expanded=\"false\"\n      data-target=\"navbarBasicExample\"\n    >\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n    </a>\n  </div>\n\n  <div\n    id=\"navbarBasicExample\"\n    [ngClass]=\"{'is-active': toggle}\"\n    class=\"navbar-menu\"\n  >\n    <div class=\"navbar-start\">\n      <a\n        class=\"navbar-item\"\n        [routerLinkActive]=\"['is-active']\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        [routerLink]=\"['/my-courses']\"\n      >\n        My Courses\n      </a>\n      <a\n        class=\"navbar-item\"\n        [routerLinkActive]=\"['is-active']\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        [routerLink]=\"['/add-post']\"\n      >\n        New Course\n      </a>\n    </div>\n\n    <div class=\"navbar-end\">\n      <div *ngIf=\"isLogged()\" class=\"navbar-item\">\n        <p class=\"is-size-6 has-text-weight-normal\">\n          {{ getUser().username }}\n        </p>\n      </div>\n      <div class=\"navbar-item\">\n        <div class=\"buttons\">\n          <a\n            *ngIf=\"!isLogged()\"\n            class=\"button is-primary\"\n            [routerLink]=\"['/register']\"\n          >\n            <strong>Register</strong>\n          </a>\n          <a\n            *ngIf=\"!isLogged()\"\n            class=\"button is-light\"\n            [routerLink]=\"['/login']\"\n          >\n            Login\n          </a>\n          <a\n            *ngIf=\"isLogged()\"\n            class=\"button is-danger\"\n            (click)=\"onLogoutClick()\"\n          >\n            Logout\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  constructor(private http: HttpClient) {}\n\n  registerUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http\n      .post('http://localhost:3000/users/register', user, {\n        headers,\n      })\n      .pipe(map((res) => res));\n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http\n      .post('http://localhost:3000/users/authenticate', user, {\n        headers,\n      })\n      .pipe(map((res) => res));\n  }\n\n  storeUserData(token, user): any {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(): void {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n  loadUser(): void {\n    const user = localStorage.getItem('user');\n    this.user = JSON.parse(user);\n  }\n\n  getUser() {\n    this.loadUser();\n    return this.user;\n  }\n  isLogged(): boolean {\n    this.loadToken();\n    return Boolean(this.authToken);\n  }\n\n  addPost(course) {\n    const headers = new HttpHeaders({\n      Authorization: this.authToken,\n      'Content-Type': 'application/json',\n    });\n    this.loadToken();\n    return this.http\n      .post('http://localhost:3000/courses/add', course, {\n        headers,\n      })\n      .pipe(map((res) => res));\n  }\n  editPost(course) {\n    const headers = new HttpHeaders({\n      Authorization: this.authToken,\n      'Content-Type': 'application/json',\n    });\n    this.loadToken();\n    return this.http\n      .post(\n        `http://localhost:3000/courses/singlepost/${course.courseId}/edit`,\n        course,\n        {\n          headers,\n        }\n      )\n      .pipe(map((res) => res));\n  }\n\n  getPost(courseId) {\n    const headers = new HttpHeaders({\n      Authorization: this.authToken,\n      'Content-Type': 'application/json',\n    });\n    this.loadToken();\n    return this.http\n      .get(`http://localhost:3000/courses/singlepost/${courseId}`, {\n        headers,\n      })\n      .pipe(map((res) => res));\n  }\n  deletePost(courseId) {\n    const headers = new HttpHeaders({\n      Authorization: this.authToken,\n      'Content-Type': 'application/json',\n    });\n    this.loadToken();\n    return this.http\n      .delete(`http://localhost:3000/courses/singlepost/${courseId}/delete`, {\n        headers,\n      })\n      .pipe(map((res) => res));\n  }\n\n  getMyPosts() {\n    const headers = new HttpHeaders({\n      Authorization: this.authToken,\n      'Content-Type': 'application/json',\n    });\n    this.loadToken();\n    return this.http\n      .get(`http://localhost:3000/courses/my-courses`, {\n        headers,\n      })\n      .pipe(map((res) => res));\n  }\n\n  logout(): any {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-courses',\n  templateUrl: './my-courses.component.html',\n  styleUrls: ['./my-courses.component.css'],\n})\nexport class MyCoursesComponent implements OnInit {\n  courses = [];\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.getMyPosts().subscribe((data: any) => {\n      this.courses = data;\n    });\n  }\n}\n","<section class=\"hero\">\n  <div class=\"hero-body\">\n    <div class=\"menu\">\n      <p class=\"menu-label\">My Courses</p>\n      <ul class=\"menu-list\">\n        <li *ngFor=\"let course of courses\">\n          <a [routerLink]=\"['/courses', course._id]\">{{ course.title }}</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</section>\n","import { Router } from '@angular/router';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css'],\n})\nexport class AddPostComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {}\n  public Editor = ClassicEditor;\n\n  course = {\n    title: '',\n    body: '',\n  };\n\n  errors = {\n    title: {\n      text: 'Title is Required',\n      is: false,\n    },\n    body: {\n      text: 'Body Is Required',\n      is: false,\n    },\n  };\n\n  ngOnInit(): void {}\n\n  hideNotification(): void {\n    this.errors.body.is = false;\n    this.errors.title.is = false;\n  }\n\n  checkForErrors(): boolean {\n    this.errors.title.is = false;\n    this.errors.body.is = false;\n\n    if (!this.course.title.length) {\n      this.errors.title.is = true;\n    }\n    if (!this.course.body.length) {\n      this.errors.body.is = true;\n    }\n    if (this.errors.title.is || this.errors.body.is) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  onPostSubmit(): void {\n    const isValid = this.checkForErrors();\n    if (isValid) {\n      this.authService.addPost(this.course).subscribe(\n        (data: any) => {\n          this.router.navigate([`/courses/${data.msg}`]);\n        },\n        (err) => {\n          this.router.navigate(['/error']);\n        }\n      );\n    }\n  }\n}\n","<section class=\"hero\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <div class=\"column is-10 is-offset-1\">\n        <h1 class=\"title is-size-3 has-text-centered has-text-black\">\n          Add new Course\n        </h1>\n        <div\n          *ngIf=\"this.errors.body.is || this.errors.title.is\"\n          class=\"notification is-danger\"\n        >\n          <button (click)=\"hideNotification()\" class=\"delete\"></button>\n          <p>{{ this.errors.title.text }}</p>\n          <p>{{ this.errors.body.text }}</p>\n        </div>\n        <div class=\"box\">\n          <form (submit)=\"onPostSubmit()\">\n            <div class=\"field\">\n              <label class=\"label\">Title : </label>\n              <div class=\"control has-icons-left has-icons-right\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  autofocus=\"\"\n                  required\n                  [(ngModel)]=\"course.title\"\n                  name=\"title\"\n                  #title=\"ngModel\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Body : </label>\n              <ckeditor\n                [(ngModel)]=\"course.body\"\n                [editor]=\"Editor\"\n                name=\"body\"\n                #body=\"ngModel\"\n              ></ckeditor>\n            </div>\n            <button type=\"submit\" class=\"button is-block is-info is-fullwidth\">\n              Post\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { AuthService } from './../../services/auth.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css'],\n})\nexport class CourseComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  courseDetails: any = {};\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.authService.getPost(params.courseid).subscribe(\n        (data: any) => {\n          console.log(params.courseid);\n          this.courseDetails = data;\n          this.courseDetails.createdAt = new Date(\n            this.courseDetails.createdAt\n          ).toDateString();\n        },\n        (err) => {\n          this.router.navigate(['/error']);\n        }\n      );\n    });\n  }\n\n  onDeleteClick(): any {\n    const result = window.confirm('Confirm Deleting Course');\n\n    if (result) {\n      this.authService.deletePost(this.courseDetails._id).subscribe(\n        (data: any) => {\n          this.router.navigate(['my-courses']);\n        },\n        (err) => {\n          this.router.navigate(['error']);\n        }\n      );\n    }\n  }\n}\n","<div class=\"container\">\n  <section class=\"articles\">\n    <div class=\"column is-8 is-offset-2\">\n      <!-- START ARTICLE -->\n      <div class=\"card article\">\n        <div class=\"card-content\">\n          <div class=\"media\">\n            <div class=\"media-center\">\n              <img\n                src=\"http://www.radfaces.com/images/avatars/daria-morgendorffer.jpg\"\n                class=\"author-image\"\n                alt=\"Placeholder image\"\n              />\n            </div>\n            <div class=\"media-content has-text-centered\">\n              <p class=\"title article-title\">\n                {{ this.courseDetails.title }}\n              </p>\n              <p class=\"subtitle is-6 article-subtitle\">\n                on {{ this.courseDetails.createdAt }}\n              </p>\n            </div>\n          </div>\n          <div\n            class=\"content article-body\"\n            [innerHTML]=\"this.courseDetails.body\"\n          ></div>\n        </div>\n        <div class=\"buttons column is-8 is-offset-4\">\n          <a [routerLink]=\"['edit']\" class=\"button is-warning\">Edit</a>\n          <button (click)=\"onDeleteClick()\" class=\"button is-danger\">\n            Delete\n          </button>\n        </div>\n      </div>\n      <!-- END ARTICLE -->\n    </div>\n  </section>\n  <!-- END ARTICLE FEED -->\n</div>\n","import { MyCoursesComponent } from './components/my-courses/my-courses.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { EditCourseComponent } from './components/edit-course/edit-course.component';\nimport { CourseComponent } from './components/course/course.component';\nimport { AddPostComponent } from './components/add-post/add-post.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthGuardService as AuthGuard } from './services/auth-guard.service';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  {\n    path: 'add-post',\n    component: AddPostComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'error',\n    component: ErrorPageComponent,\n  },\n  {\n    path: 'my-courses',\n    component: MyCoursesComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'courses/:courseid',\n    component: CourseComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'courses/:courseid/edit',\n    component: EditCourseComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: '', pathMatch: 'prefix', redirectTo: 'my-courses' },\n  { path: '**', component: ErrorPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}